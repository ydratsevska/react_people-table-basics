{"version":3,"sources":["App.tsx","PagesComponents/HomePage.tsx","components/Loader/Loader.tsx","api.ts","PagesComponents/PersonLink.tsx","PagesComponents/PeoplePageContent.tsx","PagesComponents/NoFoundPage.tsx","Root.tsx","index.tsx"],"names":["getLinkClass","isActive","classNames","App","className","role","to","HomePage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","isSelectedPerson","selectedPersonSlug","slug","sex","href","name","born","died","mother","motherName","father","fatherName","PeoplePage","useState","isLoading","setIsLoading","isError","setIsError","people","setPeople","useParams","useEffect","catch","finally","peopleWithParents","map","find","element","length","NoFoundPage","Root","path","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.f5e721ae.chunk.js","sourcesContent":["import {\n  NavLink, Outlet,\n} from 'react-router-dom';\n\nimport './App.scss';\nimport classNames from 'classnames';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item',\n  { 'has-background-grey-lighter': isActive },\n);\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink className={getLinkClass} to=\"/\">\n              Home\n            </NavLink>\n\n            <NavLink\n              className={getLinkClass}\n              to=\"/people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <Outlet />\n      </main>\n    </div>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Home Page</h1>\n    </div>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person;\n  selectedPersonSlug: string | undefined;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person, selectedPersonSlug }) => {\n  const isSelectedPerson = selectedPersonSlug === person.slug;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames(\n        { 'has-background-warning': isSelectedPerson },\n        { '': !isSelectedPerson },\n      )}\n    >\n      <td>\n        <a\n          className={person.sex === 'f' ? 'has-text-danger' : ''}\n          href={`#/people/${person.slug}`}\n        >\n          {person.name}\n        </a>\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n\n      <td>\n        {person.mother ? (\n          <a\n            className=\"has-text-danger\"\n            href={`#/people/${person.mother.slug}`}\n          >\n            {person.motherName}\n          </a>\n        ) : (\n          person.motherName || '-'\n        )}\n      </td>\n\n      <td>\n        {person.father ? (\n          <a\n            href={`#/people/${person.father.slug}`}\n          >\n            {person.fatherName}\n          </a>\n        ) : (\n          person.fatherName || '-'\n        )}\n      </td>\n    </tr>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Loader } from '../components/Loader';\nimport { getPeople } from '../api';\nimport { PersonLink } from './PersonLink';\nimport { Person } from '../types';\n\nexport const PeoplePage: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [people, setPeople] = useState<Person[]>([]);\n\n  const { slug } = useParams();\n  const selectedPersonSlug = slug;\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(setPeople)\n      .catch(() => setIsError(true))\n      .finally(() => (\n        setIsLoading(false)\n      ));\n  }, []);\n\n  const peopleWithParents = people.map(person => {\n    const mother = people.find(element => element.name === person.motherName);\n    const father = people.find(element => element.name === person.fatherName);\n\n    return { ...person, mother, father };\n  });\n\n  if (isError) {\n    return (\n      <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n        Something went wrong\n      </p>\n    );\n  }\n\n  if (isLoading) {\n    return (\n      <Loader />\n    );\n  }\n\n  if (!people.length) {\n    return (\n      <p data-cy=\"noPeopleMessage\">\n        There are no people on the server\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Sex</th>\n                <th>Born</th>\n                <th>Died</th>\n                <th>Mother</th>\n                <th>Father</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {peopleWithParents.map(person => (\n                <PersonLink\n                  person={person}\n                  selectedPersonSlug={selectedPersonSlug}\n                />\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const NoFoundPage = () => {\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Page not found</h1>\n    </div>\n  );\n};\n","import {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './PagesComponents/HomePage';\nimport { PeoplePage } from './PagesComponents/PeoplePageContent';\nimport { NoFoundPage } from './PagesComponents/NoFoundPage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"people/:slug?\" element={<PeoplePage />} />\n        <Route path=\"*\" element={<NoFoundPage />} />\n        <Route\n          path=\"/home\"\n          element={\n            <Navigate to=\"/\" replace />\n          }\n        />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}